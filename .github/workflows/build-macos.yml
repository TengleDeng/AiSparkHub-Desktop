name: Build macOS App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-macos:
    runs-on: macos-latest  # 使用最新的macOS runner
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 qtawesome PyInstaller pynput
        brew install create-dmg
        
    - name: Prepare app version
      id: app_version
      run: |
        # 如果是tag触发，使用tag作为版本号，否则使用日期作为版本号
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(date +'%Y.%m.%d')
        fi
        echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
      
    - name: Create icns icon
      run: |
        # 检查是否已有.icns格式图标
        if [ ! -f "icons/app.icns" ] && [ -f "icons/app.png" ]; then
          # 创建iconset目录
          mkdir -p AppIcon.iconset
          
          # 从现有PNG生成不同尺寸的图标
          sips -z 16 16 icons/app.png --out AppIcon.iconset/icon_16x16.png
          sips -z 32 32 icons/app.png --out AppIcon.iconset/icon_16x16@2x.png
          sips -z 32 32 icons/app.png --out AppIcon.iconset/icon_32x32.png
          sips -z 64 64 icons/app.png --out AppIcon.iconset/icon_32x32@2x.png
          sips -z 128 128 icons/app.png --out AppIcon.iconset/icon_128x128.png
          sips -z 256 256 icons/app.png --out AppIcon.iconset/icon_128x128@2x.png
          sips -z 256 256 icons/app.png --out AppIcon.iconset/icon_256x256.png
          sips -z 512 512 icons/app.png --out AppIcon.iconset/icon_256x256@2x.png
          sips -z 512 512 icons/app.png --out AppIcon.iconset/icon_512x512.png
          sips -z 1024 1024 icons/app.png --out AppIcon.iconset/icon_512x512@2x.png
          
          # 生成icns文件
          iconutil -c icns AppIcon.iconset
          
          # 移动到icons目录
          mkdir -p icons
          mv AppIcon.icns icons/app.icns
          
          # 清理临时文件
          rm -rf AppIcon.iconset
        fi
        
    - name: Build macOS application
      run: |
        # 运行build.py脚本构建.app和.dmg
        python build.py AiSparkHub ${{ env.APP_VERSION }}
        
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v3
      with:
        name: AiSparkHub-macOS-${{ steps.app_version.outputs.version }}
        path: installer/AiSparkHub_v${{ env.APP_VERSION }}.dmg
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          installer/AiSparkHub_v${{ env.APP_VERSION }}.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 